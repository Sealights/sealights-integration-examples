"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileElement = void 0;
const validation_utils_1 = require("../utils/validation-utils");
class FileElement {
    constructor(type, startPosition, endPosition, uniqueIdKey, filename) {
        validation_utils_1.ValidationUtils.verifyNotNullOrEmpty(type, 'type');
        validation_utils_1.ValidationUtils.verifyNotNullOrEmpty(startPosition, 'startPosition');
        validation_utils_1.ValidationUtils.verifyNotNullOrEmpty(endPosition, 'endPosition');
        validation_utils_1.ValidationUtils.verifyNotNullOrEmpty(uniqueIdKey, 'uniqueIdKey');
        validation_utils_1.ValidationUtils.verifyNotNullOrEmpty(filename, 'filename');
        this._type = type;
        this._startPosition = startPosition;
        this._endPosition = endPosition;
        this._uniqueIdKey = uniqueIdKey;
        this._filename = filename;
    }
    get type() {
        return this._type;
    }
    set type(value) {
        this._type = value;
    }
    get startPosition() {
        return this._startPosition;
    }
    set startPosition(value) {
        this._startPosition = value;
    }
    get endPosition() {
        return this._endPosition;
    }
    set endPosition(value) {
        this._endPosition = value;
    }
    get uniqueIdKey() {
        return this._uniqueIdKey;
    }
    set uniqueIdKey(value) {
        this._uniqueIdKey = value;
    }
    get uniqueIdKey_decl() {
        return this._uniqueIdKey_decl;
    }
    set uniqueIdKey_decl(value) {
        this._uniqueIdKey_decl = value;
    }
    get filename() {
        return this._filename;
    }
    set filename(value) {
        this._filename = value;
    }
    get uniqueId() {
        return this._uniqueId;
    }
    set uniqueId(value) {
        this._uniqueId = value;
    }
    get parentPosition() {
        return this._parentPosition;
    }
    set parentPosition(value) {
        this._parentPosition = value;
    }
    get index() {
        return this._index;
    }
    set index(value) {
        this._index = value;
    }
    isStartsAfter(fileElement) {
        if (parseInt(this._startPosition.line.toString()) < parseInt(fileElement.startPosition.line.toString())) {
            return false;
        }
        if (parseInt(this._startPosition.line.toString()) > parseInt(fileElement.startPosition.line.toString())) {
            return true;
        }
        if (parseInt(this._startPosition.column.toString()) > parseInt(fileElement.startPosition.column.toString())) {
            return true;
        }
        return false;
    }
    isStartsBefore(fileElement) {
        if (parseInt(this._startPosition.line.toString()) > parseInt(fileElement.startPosition.line.toString())) {
            return false;
        }
        if (parseInt(this._startPosition.line.toString()) < parseInt(fileElement.startPosition.line.toString())) {
            return true;
        }
        if (parseInt(this._startPosition.column.toString()) < parseInt(fileElement.startPosition.column.toString())) {
            return true;
        }
        return false;
    }
    isEndsAfter(fileElement) {
        if (parseInt(this._endPosition.line.toString()) < parseInt(fileElement.endPosition.line.toString())) {
            return false;
        }
        if (parseInt(this._endPosition.line.toString()) > parseInt(fileElement.endPosition.line.toString())) {
            return true;
        }
        if (parseInt(this._endPosition.column.toString()) > parseInt(fileElement.endPosition.column.toString())) {
            return true;
        }
        return false;
    }
    isEndsBefore(fileElement) {
        if (parseInt(this._endPosition.line.toString()) > parseInt(fileElement.endPosition.line.toString())) {
            return false;
        }
        if (parseInt(this._endPosition.line.toString()) < parseInt(fileElement.endPosition.line.toString())) {
            return true;
        }
        if (parseInt(this._endPosition.column.toString()) < parseInt(fileElement.endPosition.column.toString())) {
            return true;
        }
        return false;
    }
}
exports.FileElement = FileElement;
//# sourceMappingURL=file-element.js.map