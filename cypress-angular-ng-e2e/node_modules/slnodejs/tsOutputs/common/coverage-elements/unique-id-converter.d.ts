import { ElementPosition, ElementType, IRawElement } from './contracts';
import { FileElement } from './file-element';
import { Logger } from '../contracts';
export declare class UniqueIdConverter {
    private _uniqueIdsMap;
    private _methodsArray;
    private _branchesArray;
    private _filename;
    private logger;
    constructor(filename: string, logger: Logger);
    sortElements(): void;
    createElementsArray(file: any): void;
    createFileElement(element: IRawElement, filename: string, type: ElementType): FileElement;
    process(): void;
    setAndInitFile(file: any): void;
    protected createElementPosition(position: any): ElementPosition;
    protected fillFileElementsArray(elements: any, array: FileElement[], type: ElementType): void;
    private fillUniqueIdsMap;
    private createNewUniqueIds;
    private comparePosition;
    get uniqueIdsMap(): {};
    get methodsArray(): FileElement[];
    set methodsArray(value: FileElement[]);
    get branchesArray(): FileElement[];
    set branchesArray(value: FileElement[]);
    get filename(): string;
    private removeDuplicateElements;
    private filterDuplicates;
    private removeBranchesOutOfMethods;
    private checkBranchPosition;
    private aggregateElementsByLine;
}
