"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateTrackerFpv6 = void 0;
const state_tracker_1 = require("./state-tracker");
class StateTrackerFpv6 extends state_tracker_1.StateTracker {
    // Test name and executionId should remain null
    switchToAnonFootprints() {
    }
    isAnonymousColor(testIdentifier) {
        return testIdentifier == null;
    }
    checkTestStatusAtServer(async = true) {
        this.backendProxy.testExecutionV4(this.cfg.labId.value, async, this.getExecutionIdForQuery()).then((response) => {
            this.fireExecutionEvents(response.execution);
            this.notifyCockpit(response.execution);
            this.currentExecution = response.execution;
        }).catch(err => {
            this.logger.warn(`Error while checking test execution status ${err}`);
        });
    }
}
exports.StateTrackerFpv6 = StateTrackerFpv6;
//# sourceMappingURL=state-tracker-fpv6.js.map