"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentInstanceData = void 0;
const uuid = require("uuid");
const agent_events_contracts_1 = require("./agent-events/agent-events-contracts");
const files_utils_1 = require("./utils/files-utils");
const fs_1 = require("fs");
const agent_instance_info_builder_1 = require("./agent-events/agent-instance-info-builder");
class AgentInstanceData {
    constructor(agentType, technology, buildSessionId) {
        this.agentType = agentType;
        this.technology = technology;
        this.buildSessionId = buildSessionId;
        this.agentId = uuid();
        this.agentVersion = this.resolveAgentVersion();
    }
    resolveAgentVersion() {
        if (this.technology === agent_events_contracts_1.AgentTechnologies.BROWSER) {
            return this.resolveAgentVersionForBrowserAgent();
        }
        const packageJsonFilePath = files_utils_1.FilesUtils.findFileUp('package.json', __dirname);
        if (packageJsonFilePath) {
            try {
                const packageJson = (0, fs_1.readFileSync)(packageJsonFilePath).toString();
                const parsed = JSON.parse(packageJson);
                return parsed.version;
            }
            catch (e) {
                console.warn(`Failed to resolve agent version, Error: '${e}`);
                return null;
            }
        }
        return null;
    }
    resolveAgentVersionForBrowserAgent() {
        const windowVar = typeof window !== 'undefined' ? window : null;
        return (windowVar && windowVar[agent_instance_info_builder_1.AgentInstanceInfoBuilder.SEALIGHTS_WINDOW_OBJECT] && windowVar[agent_instance_info_builder_1.AgentInstanceInfoBuilder.SEALIGHTS_WINDOW_OBJECT].agentVersion) || agent_instance_info_builder_1.AgentInstanceInfoBuilder.DEFAULT_BROWSER_AGENT_VERSION;
    }
    set AgentAllocatedMemoryInMb(memory) {
        this.agentAllocatedMemoryInMb = memory;
    }
    get AgentAllocatedMemoryInMb() {
        return this.agentAllocatedMemoryInMb;
    }
}
exports.AgentInstanceData = AgentInstanceData;
//# sourceMappingURL=agent-instance-data.js.map