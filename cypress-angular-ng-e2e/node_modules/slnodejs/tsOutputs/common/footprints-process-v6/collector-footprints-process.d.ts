import { BackendProxy } from '../http/backend-proxy';
import { Watchdog } from '../watchdog';
import { FootprintsProcess } from '.';
import { NoopStateTracker } from '../no-op-state-tracker';
import { CollectorFootprintsBuffer } from './collector-footprints-buffer';
import { HitsCollector } from './hits-collector';
import { HitsConverter } from './hits-converter';
import { Logger } from '../contracts';
import { AgentConfig } from '../config-process/config';
export declare class CollectorFootprintsProcess extends FootprintsProcess {
    protected stateTracker: NoopStateTracker;
    protected footprintsBuffer: CollectorFootprintsBuffer;
    constructor(cfg: AgentConfig, sendToServerWatchdog: Watchdog, keepaliveWatchdog: Watchdog, logger: Logger, hitsCollector: HitsCollector, hitsConverter: HitsConverter, footprintsBuffer: CollectorFootprintsBuffer, backendProxy: BackendProxy, stateTracker: NoopStateTracker);
    submitQueuedFootprints(): Promise<void>;
    stop(): Promise<void>;
    flushCurrentFootprints(isFinalFootprints?: boolean): Promise<void>;
}
