/// <reference types="node" />
import { ICollectionInterval, IConvertedFootprints, IFootprintsV6File, IFootprintsV6Meta } from './contracts';
import { AgentConfig } from '../config-process/config';
import { AgentInstanceData } from '../agent-instance-data';
import events = require('events');
/**
 * Holds the footprints hits data and builds the DTO for footprints packet
 */
export declare class FootprintsBuffer extends events.EventEmitter {
    static readonly BUFFER_FULL = "bufferFull";
    private formatVersion;
    private branches;
    private executions;
    protected meta: IFootprintsV6Meta;
    private methods;
    private moduleName;
    protected agentInstanceData: AgentInstanceData;
    private _agentConfig;
    private currentBufferSize;
    private methodIdToIndex;
    private branchIdToIndex;
    private bufferSizeHelper;
    constructor(agentInstanceData: AgentInstanceData, agentConfig: AgentConfig);
    addHit(footprints: IConvertedFootprints, collectionInterval: ICollectionInterval, executionId: string, testName: string, isInitFootprints: boolean, isFinalFootprints: boolean): void;
    createPacket(): IFootprintsV6File;
    resetState(): void;
    hasHitsInBuffer(): boolean;
    get agentConfig(): AgentConfig;
    set agentConfig(value: AgentConfig);
    toJson(): IFootprintsV6File;
    private addOrGetIndices;
    private addOrGetExecutionIndex;
    private verifyBufferSize;
}
