"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseBrowserHitsConverter = void 0;
const location_formatter_1 = require("./location-formatter");
const hits_converter_1 = require("../../common/footprints-process-v6/hits-converter");
const files_utils_1 = require("../utils/files-utils");
/**
 * Converts hits to uniqueId using sl-mapping
 */
class BaseBrowserHitsConverter extends hits_converter_1.HitsConverter {
    constructor(relativePathResolver, buildSessionId, logger) {
        super(relativePathResolver, {}, {}, logger);
        this.buildSessionId = buildSessionId;
    }
    getMethodUniqueId(startLoc, relativePath, absolutePath) {
        const uniqueId = absolutePath + hits_converter_1.HitsConverter.METHOD_ID_DEL + this.formatLoc(startLoc);
        return this.tryGetUniqueIdFromSlMapping(uniqueId);
    }
    getBranchUniqueId(startLoc, relativePath, absolutePath, leaveIndex) {
        const uniqueId = absolutePath + hits_converter_1.HitsConverter.BRANCH_ID_DEL + this.formatLoc(startLoc) + hits_converter_1.HitsConverter.BRANCH_ID_DEL + leaveIndex;
        return this.tryGetUniqueIdFromSlMapping(uniqueId);
    }
    getDeclStart(hit) {
        const decl = this.getDecl(hit);
        return decl.start || decl.st;
    }
    getDecl(hit) {
        return (hit.decl || hit.d);
    }
    getStartLoc(hit) {
        const loc = hit.loc || hit.lc;
        return loc.start || loc.st;
    }
    getLeaveStartLoc(hit, leaveIdx) {
        const locations = hit.branchData.locations || hit.branchData.lcs;
        return locations[leaveIdx].start || locations[leaveIdx].st;
    }
    formatLoc(loc) {
        return (0, location_formatter_1.formatLocation)(loc, this.logger);
    }
    tryGetUniqueIdFromSlMapping(rawUniqueId) {
        rawUniqueId = files_utils_1.FilesUtils.adjustPathSlashes(rawUniqueId);
        const mapping = this.getSlMapping() || {};
        return mapping[rawUniqueId] || rawUniqueId;
    }
}
exports.BaseBrowserHitsConverter = BaseBrowserHitsConverter;
//# sourceMappingURL=base-browser-hits-converter.js.map