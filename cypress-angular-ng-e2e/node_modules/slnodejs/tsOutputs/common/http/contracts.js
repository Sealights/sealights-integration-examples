"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SealightsHaderValues = exports.SealightsHeaderNames = exports.ContentType = exports.RecommendationSetStatus = exports.RecommendedTestReason = exports.UploadReportsBody = exports.EnvironmentData = exports.AgentData = exports.UploadReportRequest = exports.EndExecutionRequest = exports.StartExecutionRequest = exports.BaseRequest = exports.SubmitLogsRequest = exports.GetRemoteConfigRequest = exports.FileData = exports.DependencyData = exports.BuildMappingRequest = exports.VersionMetaQuery = exports.VersionMeta = exports.AgentInfo = exports.GetVersionResponse = exports.GetVersionRequest = exports.CreateBuildSessionIdResponse = exports.SlAgentMetadata = exports.IHttpClientConfigData = void 0;
const system_date_1 = require("../system-date");
class IHttpClientConfigData {
}
exports.IHttpClientConfigData = IHttpClientConfigData;
class SlAgentMetadata {
}
exports.SlAgentMetadata = SlAgentMetadata;
class CreateBuildSessionIdResponse {
}
exports.CreateBuildSessionIdResponse = CreateBuildSessionIdResponse;
class GetVersionRequest {
}
exports.GetVersionRequest = GetVersionRequest;
class GetVersionResponse {
}
exports.GetVersionResponse = GetVersionResponse;
class AgentInfo {
}
exports.AgentInfo = AgentInfo;
class VersionMeta {
}
exports.VersionMeta = VersionMeta;
class VersionMetaQuery {
}
exports.VersionMetaQuery = VersionMetaQuery;
class BuildMappingRequest {
}
exports.BuildMappingRequest = BuildMappingRequest;
class DependencyData {
}
exports.DependencyData = DependencyData;
class FileData {
}
exports.FileData = FileData;
class GetRemoteConfigRequest {
}
exports.GetRemoteConfigRequest = GetRemoteConfigRequest;
class SubmitLogsRequest {
    constructor() {
        this.creationTime = (0, system_date_1.getSystemDateValueOf)();
    }
}
exports.SubmitLogsRequest = SubmitLogsRequest;
class BaseRequest {
}
exports.BaseRequest = BaseRequest;
class StartExecutionRequest extends BaseRequest {
}
exports.StartExecutionRequest = StartExecutionRequest;
class EndExecutionRequest extends BaseRequest {
}
exports.EndExecutionRequest = EndExecutionRequest;
class UploadReportRequest extends BaseRequest {
}
exports.UploadReportRequest = UploadReportRequest;
class AgentData {
}
exports.AgentData = AgentData;
class EnvironmentData {
}
exports.EnvironmentData = EnvironmentData;
class UploadReportsBody {
}
exports.UploadReportsBody = UploadReportsBody;
var RecommendedTestReason;
(function (RecommendedTestReason) {
    RecommendedTestReason["PINNED"] = "pinned";
    RecommendedTestReason["IMPACTED"] = "impacted";
    RecommendedTestReason["FAILED"] = "failed";
})(RecommendedTestReason = exports.RecommendedTestReason || (exports.RecommendedTestReason = {}));
var RecommendationSetStatus;
(function (RecommendationSetStatus) {
    RecommendationSetStatus["NOT_READY"] = "notReady";
    RecommendationSetStatus["READY"] = "ready";
    RecommendationSetStatus["NO_HISTORY"] = "noHistory";
    RecommendationSetStatus["ERROR"] = "error";
    RecommendationSetStatus["WONT_BE_READY"] = "wontBeReady";
})(RecommendationSetStatus = exports.RecommendationSetStatus || (exports.RecommendationSetStatus = {}));
var ContentType;
(function (ContentType) {
    ContentType["OCTET_STREAM"] = "application/octet-stream";
    ContentType["JSON"] = "application/json";
})(ContentType = exports.ContentType || (exports.ContentType = {}));
var SealightsHeaderNames;
(function (SealightsHeaderNames) {
    SealightsHeaderNames["CONTENT_TYPE"] = "Content-Type";
    SealightsHeaderNames["AUTHOTIZARTION"] = "Authorization";
    SealightsHeaderNames["MODE"] = "X-Sealights-Agent-Mode";
    SealightsHeaderNames["META_DATA"] = "sl-metadata";
    SealightsHeaderNames["LAB_ID"] = "x-sl-labId";
    SealightsHeaderNames["APP_NAME"] = "x-sl-appName";
    SealightsHeaderNames["BRANCH_NAME"] = "x-sl-branchName";
    SealightsHeaderNames["BUILD_NAME"] = "x-sl-buildName";
    SealightsHeaderNames["BSID"] = "x-sl-bsid";
    SealightsHeaderNames["EXECUTION_ID"] = "x-sl-executionId";
    SealightsHeaderNames["AGENT_ID"] = "x-sl-agentId";
    SealightsHeaderNames["MESSAGE_TYPE"] = "x-sl-messageType";
})(SealightsHeaderNames = exports.SealightsHeaderNames || (exports.SealightsHeaderNames = {}));
var SealightsHaderValues;
(function (SealightsHaderValues) {
    SealightsHaderValues["LIGHT_AGENT_MODE"] = "light";
})(SealightsHaderValues = exports.SealightsHaderValues || (exports.SealightsHaderValues = {}));
//# sourceMappingURL=contracts.js.map