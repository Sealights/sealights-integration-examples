"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MachineInfoBuilder = void 0;
const os = require("os");
const system_date_1 = require("../system-date");
const buffer_size_helper_1 = require("../footprints-process-v6/buffer-size-helper");
class MachineInfoBuilder {
    constructor() {
        this.info = {};
    }
    fillData() {
        const currentDate = (0, system_date_1.getSystemDate)();
        this.info.machineName = os.hostname();
        const cpus = os.cpus();
        this.info.cpu = cpus.map(cpu => `${cpu.model} (${cpu.speed} MHz`).join(', ');
        this.info.totalMemory = `${os.totalmem() / buffer_size_helper_1.BufferSizeHelper.BYTES_IN_GB} Gb`;
        this.info.arch = os.arch();
        this.info.os = os.platform();
        this.info.localDateTime = currentDate.toString();
        this.info.localDateTimeUnix_s = currentDate.getTime();
        this.info.runtime = process.version;
        this.info.ipAddress = this.extractIpAddresses();
    }
    build() {
        this.fillData();
        return this.info;
    }
    extractIpAddresses() {
        let ipAddresses = [];
        const interfaces = os.networkInterfaces();
        Object.keys(interfaces).forEach(key => {
            const addressesArr = interfaces[key];
            ipAddresses = ipAddresses.concat(addressesArr.map(addressObject => addressObject.address));
        });
        return ipAddresses;
    }
}
exports.MachineInfoBuilder = MachineInfoBuilder;
//# sourceMappingURL=machine-info-builder.js.map