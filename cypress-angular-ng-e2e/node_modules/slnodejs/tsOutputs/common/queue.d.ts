/// <reference types="node" />
import events = require('events');
export interface IQueue<T> {
    requeue(items: T[]): any;
    enqueue(item: T): any;
    getQueueSize(): any;
    dequeue(size: number): any;
    clear(): any;
    on(event: string, listener: Function): any;
}
export declare class Queue<T> extends events.EventEmitter implements IQueue<T> {
    requeue(items: T[]): void;
    enqueue(item: T): void;
    private queue;
    private maxItemsInQueue;
    getQueueSize(): number;
    dequeue(size: number): T[];
    clear(): void;
}
