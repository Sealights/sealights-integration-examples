import { BaseConfiguration, BooleanConfigKey, NumberConfigKey, StringConfigKey } from './config-system';
export declare class AgentConfig extends BaseConfiguration {
    /**
     * Sealights agent token (JWT)
     * @type {string}
     * @memberOf Config
     */
    token: StringConfigKey;
    buildSessionId: StringConfigKey;
    tokenFile: StringConfigKey;
    server: StringConfigKey;
    origin: StringConfigKey;
    proxy: StringConfigKey;
    interval: NumberConfigKey;
    testStatusCheckInterval: NumberConfigKey;
    enabled: BooleanConfigKey;
    useOtel: BooleanConfigKey;
    sendFootprints: BooleanConfigKey;
    sendEvents: BooleanConfigKey;
    sendLogs: BooleanConfigKey;
    customerId: StringConfigKey;
    appName: StringConfigKey;
    branch: StringConfigKey;
    build: StringConfigKey;
    environmentName: StringConfigKey;
    useBranchCoverage: BooleanConfigKey;
    labId: StringConfigKey;
    testGroupId: StringConfigKey;
    testStage: StringConfigKey;
    httpServerColoring: BooleanConfigKey;
    httpClientColoring: BooleanConfigKey;
    useInitialColor: BooleanConfigKey;
    gzip: BooleanConfigKey;
    useIstanbul: BooleanConfigKey;
    enableChildProcessPatcher: BooleanConfigKey;
    /**
     * Comma-separated list of loggers. Available: console, file
     */
    loggers: StringConfigKey;
    /**
    * Port number for coloring
    * */
    httpListeningPort: NumberConfigKey;
    useFootprintsV3: BooleanConfigKey;
    extendedFootprints: BooleanConfigKey;
    projectRoot: StringConfigKey;
    enforceFullRun: BooleanConfigKey;
    footprintsEnableV6: BooleanConfigKey;
    footprintsBufferThresholdMb: NumberConfigKey;
    executionQueryIntervalSecs: NumberConfigKey;
    footprintsQueueSize: NumberConfigKey;
    footprintsSendIntervalSecs: NumberConfigKey;
    footprintsCollectIntervalSecs: NumberConfigKey;
    shouldCheckForActiveExecutionOnStartUp: BooleanConfigKey;
    useTsNode: BooleanConfigKey;
    testRecommendationSleepSeconds: NumberConfigKey;
    tiaDisabled: BooleanConfigKey;
    removeSensitiveData: BooleanConfigKey;
    httpTimeout: NumberConfigKey;
    httpMaxAttempts: NumberConfigKey;
    httpAttemptInterval: NumberConfigKey;
    collectorUrl: StringConfigKey;
}
export declare class AgentConfigWithRuntimeArgs extends AgentConfig {
    /**
     * Path to config file
     *
     * @memberOf AgentConfigWithRuntimeArgs
     */
    cfg: StringConfigKey;
}
