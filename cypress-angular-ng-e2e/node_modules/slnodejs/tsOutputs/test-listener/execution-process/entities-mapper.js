"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EntitiesMapper = void 0;
class EntitiesMapper {
    toIStartExecutionRequest(agentConfig, testphase) {
        const result = {
            appName: agentConfig.appName.value,
            customerId: agentConfig.customerId.value,
            server: agentConfig.server.value,
            proxy: agentConfig.proxy.value,
            labId: (agentConfig.labId.value || agentConfig.environmentName.value || agentConfig.appName.value),
            buildName: agentConfig.build.value,
            branchName: agentConfig.branch.value,
            isValidToken: (agentConfig.token.hasValue || agentConfig.tokenFile.hasValue),
            testStage: testphase
        };
        return result;
    }
    toIEndExecutionRequest(agentConfig) {
        const result = {
            appName: agentConfig.appName.value,
            customerId: agentConfig.customerId.value,
            server: agentConfig.server.value,
            proxy: agentConfig.proxy.value,
            labId: agentConfig.labId.value,
            build: agentConfig.build.value,
            branch: agentConfig.branch.value,
            isValidToken: (agentConfig.token.hasValue || agentConfig.tokenFile.hasValue)
        };
        return result;
    }
    toIUploadReportRequest(agentConfig) {
        const result = {
            appName: agentConfig.appName.value,
            customerId: agentConfig.customerId.value,
            server: agentConfig.server.value,
            proxy: agentConfig.proxy.value,
            labId: agentConfig.labId.value,
            build: agentConfig.build.value,
            branch: agentConfig.branch.value,
            isValidToken: (agentConfig.token.hasValue || agentConfig.tokenFile.hasValue)
        };
        return result;
    }
}
exports.EntitiesMapper = EntitiesMapper;
//# sourceMappingURL=entities-mapper.js.map