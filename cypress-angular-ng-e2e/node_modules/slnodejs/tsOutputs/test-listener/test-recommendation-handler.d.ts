/**
 *  Creates json object with tests to exclude.
 *  Data receives from recommended tests api
 */
import { EventsProcess } from '../common/events-process';
import { BackendProxy } from '../common/http/backend-proxy';
import { Logger } from '../common/contracts';
import { ITestRecommendationsConfig } from './contracts';
export declare class TestRecommendationHandler {
    private buildSessionId;
    private testStage;
    private testGroupId;
    private tiaDisabled;
    private backendProxy;
    private eventsProcess;
    private logger;
    private SLEEP_BETWEEN_RETRIES;
    private MAX_RETRIES;
    constructor(backendProxy: BackendProxy, eventsProcess: EventsProcess, logger: Logger, configParams: ITestRecommendationsConfig);
    getExcludedTests(): Promise<{
        [name: string]: boolean;
    }>;
    getExcludedTestsAsync(callback: (excludedTests: {
        [name: string]: boolean;
    }) => void): void;
    private getTestRecommendation;
    private isRecommendationsEnabledAndNotReady;
    private logExcludedTests;
    private isSelectionEnabled;
    private shouldGetRecommendation;
}
