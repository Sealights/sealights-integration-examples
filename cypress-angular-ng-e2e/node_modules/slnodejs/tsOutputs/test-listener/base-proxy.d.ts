/// <reference types="request" />
/// <reference types="node" />
import request = require('sl-request');
import { AgentConfig } from '../common/config-process/config';
import { Logger } from '../common/contracts';
export declare abstract class BaseProxy {
    protected cfg: AgentConfig;
    protected request: request.RequestAPI<any, any, any>;
    protected logger: Logger;
    constructor(cfg: AgentConfig, request: request.RequestAPI<any, any, any>, logger: Logger);
    protected get<T>(urlPath: string, callback: (err: Error, data: T) => void): void;
    protected delete<T>(urlPath: string, callback: (err: Error, data: T) => void): void;
    protected post(bufferToSend: Buffer, urlPath: string, callback: (err: Error) => void): void;
    private internalPost;
    private allowUntrustedCertificates;
}
