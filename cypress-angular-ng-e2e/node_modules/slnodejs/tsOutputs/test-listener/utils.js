"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utils = void 0;
/**
 * Created by nadav on 21/03/2017.
 */
const jwtDecode = require("jwt-decode");
class Utils {
    constructor() {
        this.JWTPrefix = 'eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.';
    }
    parseToken(parsedToken, parsedArgs) {
        try {
            if (parsedArgs.customerid && parsedArgs.customerid.indexOf(this.JWTPrefix) == 0) {
                parsedToken = parsedArgs.customerid;
                parsedArgs.token = parsedToken;
            }
            if (!parsedToken) {
                throw new Error('Token Must Be Given');
            }
            const tokenData = jwtDecode(parsedToken);
            if (!tokenData['x-sl-server']) {
                throw new Error('Doesn\'t Contain Server');
            }
            if (!tokenData['subject']) {
                throw new Error('Doesn\'t Contain Subject');
            }
            let customerId = tokenData['subject'];
            const subjectParts = tokenData['subject'].split('@');
            if (subjectParts.length >= 1) {
                customerId = subjectParts[0];
            }
            parsedArgs.server = tokenData['x-sl-server'];
            parsedArgs.customerid = customerId;
            parsedArgs.isValidToken = true;
        }
        catch (err) {
            console.error('Token Is Invalid. ' + err);
            parsedArgs.isValidToken = false;
        }
    }
    resolveLabId(labId, env, appName) {
        if (labId) {
            return labId;
        }
        if (env) {
            return env;
        }
        if (appName) {
            return appName;
        }
        return 'DefaultLabId';
    }
    resolveTestStage(testStage, env, labId) {
        if (testStage) {
            return testStage;
        }
        if (env) {
            return env;
        }
        if (labId) { // needed for backwards compatibility. only for nodejs
            return labId;
        }
        return 'Unit Tests';
    }
}
exports.Utils = Utils;
//# sourceMappingURL=utils.js.map