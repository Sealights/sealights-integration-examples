"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseData = void 0;
const helper_methods_1 = require("./helper-methods");
const Constants = require("../../constants/constants");
const files_utils_1 = require("../../../common/utils/files-utils");
class BaseData {
    constructor(buildArguments) {
        this.buildArguments = buildArguments;
    }
    truncateFilesPathByDepth() {
        var _a;
        const truncated = (_a = this.files) === null || _a === void 0 ? void 0 : _a.map(file => (0, helper_methods_1.truncatePathByDepth)(file, this.buildArguments.depth));
        return (0, helper_methods_1.removeDuplicates)(truncated);
    }
    uniqueIdsByPath() {
        var _a;
        const pathToIds = {};
        (_a = this.uniqueIds) === null || _a === void 0 ? void 0 : _a.forEach(id => {
            let path = id.split(Constants.METHOD_DELIMITER)[0];
            path = path.split(Constants.BRANCH_DELIMITER)[0];
            path = files_utils_1.FilesUtils.adjustPathSlashes(path);
            pathToIds[path] = pathToIds[path] || [];
            pathToIds[path].push(id);
        });
        return pathToIds;
    }
    printUniqueIds() {
        console.log(`\n${this.idsFoldersTitle}: depth = ${this.buildArguments.depth}`);
        console.log((0, helper_methods_1.printArray)(Array.from(new Set(this.files)), this.idsFoldersFilename));
    }
    get uniqueIds() {
        return this._uniqueIds;
    }
    set uniqueIds(value) {
        this._uniqueIds = value;
    }
    get files() {
        return this._files;
    }
    set files(value) {
        this._files = value;
    }
}
exports.BaseData = BaseData;
//# sourceMappingURL=base-data.js.map