function AstNodeTypes() {
}
AstNodeTypes.LogicalExpression = "LogicalExpression";
AstNodeTypes.BlockStatement = "BlockStatement";
AstNodeTypes.SwitchStatement = "SwitchStatement";
AstNodeTypes.IfStatement = "IfStatement";
AstNodeTypes.ConditionalExpression = "ConditionalExpression";
AstNodeTypes.StringLiteral = "StringLiteral";
AstNodeTypes.Identifier = "Identifier";
AstNodeTypes.AssignmentPattern = "AssignmentPattern";
AstNodeTypes.DefaultArgument = "DefaultArgument";
AstNodeTypes.FunctionExpression = "FunctionExpression";
AstNodeTypes.FunctionDeclaration = "FunctionDeclaration";
AstNodeTypes.ExportNamedDeclaration = "ExportNamedDeclaration";
AstNodeTypes.ExportDefaultDeclaration = "ExportDefaultDeclaration";
AstNodeTypes.ClassMethod = "ClassMethod";
AstNodeTypes.isMethodNode = function (node) {
    if (!node && !node.type)
        return false;
    return methodNodeTypes[node.type];
};
AstNodeTypes.isBranchNode = function (node) {
    if (!node && !node.type)
        return false;
    return branchNodeTypes[node.type];
};
var branchNodeTypes = {
    "IfStatement": true,
    "SwitchStatement": true,
    "ConditionalExpression": true,
    "LogicalExpression": true
};
//TODO: Can we use 'CallExpression' in order to understend which functions are being called? (Nadav)
//TODO: Do we need to handle:  (Nadav)
// * "MemberExpression"? 
// * "ClassPrivateMethod"
// * "ClassProperty"
// * "ClassPrivateProperty"
// ObjectMethod is property function like "get", "set", "init". that uses in babylon. (in espirma its called Property). 
var methodNodeTypes = {
    "FunctionDeclaration": true,
    "FunctionExpression": true,
    "ArrowFunctionExpression": true,
    "ObjectMethod": true,
    "ClassMethod": true
};
module.exports = AstNodeTypes;
//# sourceMappingURL=ast-node-types.js.map