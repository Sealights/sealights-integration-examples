/**
 * Holds mapping between source position of element (method/branch) and the index in generated file.
 * @param sourceFilepath
 * @constructor
 */
function SourcePositionMapper(sourceFilepath) {
    this.sourceFilePath = sourceFilepath;
    this.methods = {};
    this.branches = {};
}
SourcePositionMapper.prototype.addMethod = function (sourcePosition, index) {
    this.methods[sourcePosition] = index;
};
SourcePositionMapper.prototype.addBranch = function (sourcePosition, index) {
    this.branches[sourcePosition] = index;
};
SourcePositionMapper.prototype.getMethodIndex = function (sourcePosition) {
    return this.methods[sourcePosition] != null ? this.methods[sourcePosition] : -1;
};
SourcePositionMapper.prototype.getBranchIndex = function (sourcePosition) {
    return this.branches[sourcePosition] != null ? this.branches[sourcePosition] : -1;
};
SourcePositionMapper.prototype.getMethodsPosition = function () {
    return Object.keys(this.methods) || [];
};
SourcePositionMapper.prototype.getBranchesPosition = function () {
    return Object.keys(this.branches) || [];
};
module.exports = SourcePositionMapper;
//# sourceMappingURL=source-position-mapper.js.map