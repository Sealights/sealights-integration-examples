var GLOBAL_BRANCH_METHOD_INDEX = -1;
function EntitiesMapper() {
}
EntitiesMapper.toServerMethod = function (method) {
    var serverMethod = {
        uniqueId: method.uniqueId,
        displayName: method.srcData.displayName,
        position: method.srcData.position,
        endPosition: method.srcData.endPosition,
        hash: method.srcData.hash,
        sigHash: method.srcData.sigHash,
        meta: method.meta,
        techSpecificInfo: method.techSpecificInfo,
        idxInMapping: method.idxInMapping
    };
    return serverMethod;
};
EntitiesMapper.toServerBranch = function (branch) {
    var serverBranch = {
        uniqueId: branch.uniqueId,
        filename: branch.srcData.relativeFilename,
        type: branch.type,
        position: branch.srcData.position,
        endPosition: branch.srcData.endPosition,
        hash: branch.srcData.hash,
        index: branch.index,
        parentPosition: branch.srcData.parentPosition,
        enclosingMethodIdx: branch.enclosingMethodIdx
    };
    if (branch.enclosingMethodIdx == GLOBAL_BRANCH_METHOD_INDEX) {
        serverBranch.techSpecificInfo = branch.techSpecificInfo;
    }
    return serverBranch;
};
module.exports = EntitiesMapper;
//# sourceMappingURL=entities-mapper.js.map